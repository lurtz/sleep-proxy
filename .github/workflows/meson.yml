name: Meson

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  min-build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies for minimal build
      run: sudo apt install meson libpcap-dev

    - name: Configure Meson for minimal build
      run: meson setup --buildtype debug ${{github.workspace}}/min_build ${{github.workspace}}

    - name: Minimal build
      run: meson compile -C ${{github.workspace}}/min_build

  build:
    runs-on: ubuntu-latest

    permissions:
      pull-requests: write

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies for complete build
      run: sudo apt install meson libpcap-dev valgrind libcppunit-dev arping lcov

    - name: Configure Meson
      run: meson setup --buildtype debug -Db_coverage=true ${{github.workspace}}/build ${{github.workspace}}

    - uses: ammaraskar/gcc-problem-matcher@master

    - name: Build
      # meson uses relatives paths from the build directory
      # This confuses the problem matcher, thus with sed the path is made appear to start
      # from the source directory
      run: meson compile -C ${{github.workspace}}/build | sed -s 's/..\///'

    - name: Test
      run: meson test -C ${{github.workspace}}/build

    - name: Create coverage
      working-directory: ${{github.workspace}}/build
      run: ninja coverage

    - uses: romeovs/lcov-reporter-action@v0.3.1
      if: ${{ github.event_name == 'pull_request' }}
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        lcov-file: ${{github.workspace}}/build/meson-logs/coverage.info

  fsanitize:
    strategy:
      matrix:
        sanitizer: ['address,undefined', 'thread']
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies for build
      run: sudo apt install meson libpcap-dev libcppunit-dev

    - name: Configure Meson
      run: meson setup ${{github.workspace}}/build . --buildtype debug -Db_sanitize=${{ matrix.sanitizer }}

    - name: Build
      run: meson compile -C ${{github.workspace}}/build

    - name: Test
      run: meson test -C ${{github.workspace}}/build
